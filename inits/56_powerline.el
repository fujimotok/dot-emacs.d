;;; 56_powerline.el --- custom mode line and fix arrow graph
;;powerlineの設定
(setq ns-use-srgb-colorspace nil)

(defun powerline-my-theme ()
  "Setup the my mode-line."
  (interactive)
  (setq powerline-current-separator 'utf-8)
  (setq-default mode-line-format
                '("%e"
                  (:eval
                   (let* ((active (powerline-selected-window-active))
                          (mode-line (if active 'mode-line 'mode-line-inactive))
                          (l1 (if active 'arrow-1-fg 'arrow-1-bg))
			  (l2 (if active 'arrow-2-fg 'arrow-2-bg))
			  (l3 (if active 'arrow-3-fg 'arrow-3-bg))
			  (l4 (if active 'arrow-4-fg 'arrow-4-bg))
			  (l5 (if active 'arrow-5-fg 'arrow-5-bg))
                          (base (if active 'base-fg 'base-bg))
                          (separator-left (intern (format "powerline-%s-%s"
                                                          (powerline-current-separator)
                                                          (car powerline-default-separator-dir))))
                          (separator-right (intern (format "powerline-%s-%s"
							   (powerline-current-separator)
							   (cdr powerline-default-separator-dir))))
                          (lhs (list (powerline-raw " " l1)
                                     (powerline-major-mode l1)
                                     (powerline-raw " " l1)
                                     (funcall separator-left l1 l2)
				     (powerline-raw " " l2)
				     (powerline-raw "%*" l2)
				     (powerline-raw " " l2)
				     (funcall separator-left l2 base)
				     (powerline-raw " " base)
                                     (powerline-buffer-id base)
                                     ))
                          (rhs (list (funcall separator-right base l4)
				     (powerline-raw " " l4)
				     (powerline-process l4)
                                     (powerline-vc l4)
				     (powerline-raw " " l4)
				     (funcall separator-right l4 l3)
				     (powerline-raw " " l3)
				     (powerline-raw (format "%s" buffer-file-coding-system) l3)
				     (powerline-raw " " l3)
				     (funcall separator-right l3 l2)
				     (powerline-raw " " l2)
				     (powerline-raw "%4l" l2)
                                     (powerline-raw ":" l2)
                                     (powerline-raw "%2c" l2)
				     (powerline-raw " " l2)
				     (funcall separator-right l2 l1)
				     (powerline-raw " " l1)
                                     (powerline-raw "%6p" l1)
                                     (powerline-raw " " l1)
                                     )))
                     (concat (powerline-render lhs)
                             (powerline-fill base (powerline-width rhs))
                             (powerline-render rhs)))))))

(defun make/set-face (face-name fg-color bg-color weight)
  (make-face face-name)
  (set-face-attribute face-name nil
                      :foreground fg-color :background bg-color :box nil :weight weight))

(make/set-face 'arrow-1-fg "#222222" "#FED900" 'bold)
(make/set-face 'arrow-1-bg "#F0F0F0" "#222222" 'bold)
(make/set-face 'arrow-2-fg "#222222" "#0179AD" 'bold)
(make/set-face 'arrow-2-bg "#F0F0F0" "#262626" 'bold)
(make/set-face 'arrow-3-fg "#222222" "#DF2353" 'bold)
(make/set-face 'arrow-3-bg "#F0F0F0" "#2A2A2A" 'bold)
(make/set-face 'arrow-4-fg "#222222" "#01A64A" 'bold)
(make/set-face 'arrow-4-bg "#F0F0F0" "#333333" 'bold)
(make/set-face 'arrow-5-fg "#222222" "#585195" 'bold)
(make/set-face 'arrow-5-bg "#F0F0F0" "#303030" 'bold)
(make/set-face 'base-fg  "#F0F0F0" "#666666" 'bold) 
(make/set-face 'base-bg  "#F0F0F0" "#555555" 'bold) 

(powerline-my-theme)
